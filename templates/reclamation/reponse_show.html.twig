{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        /* Navbar Styles */
        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: #ffffff;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.06);
            padding: 8px 20px;
            min-height: 70px;
            font-family: 'Inter', 'Roboto', sans-serif;
            position: relative;
        }

        .navbar-brand {
            display: flex;
            align-items: center;
        }

        .navbar-brand img {
            height: 55px;
            width: 170px;
            border-radius: 10px;
            object-fit: contain;
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            will-change: transform, box-shadow;
        }

        .navbar-brand img:hover {
            transform: perspective(500px) rotateY(10deg) scale(1.05);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.08);
        }

        .navbar-brand img:active {
            transform: perspective(500px) rotateY(-10deg) scale(0.98);
        }

        .navbar-menu {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .nav-button {
            background-color: transparent;
            color: #2c3e50;
            font-weight: 600;
            text-decoration: none;
            padding: 6px 12px;
            border-radius: 5px;
            min-width: 80px;
            text-align: center;
            font-size: 0.85rem;
            letter-spacing: 0.5px;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .nav-button::before {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: #1a237e;
            transform: scaleX(0);
            transition: transform 0.3s ease;
        }

        .nav-button:hover {
            color: #1a237e;
        }

        .nav-button:hover::before {
            transform: scaleX(1);
        }

        .nav-button:active {
            background-color: rgba(26, 35, 126, 0.1);
            transform: scale(0.95);
        }

        .navbar-brand img:hover::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: radial-gradient(circle at center, rgba(255,255,255,0.3) 0%, transparent 70%);
            pointer-events: none;
        }

        /* Page Specific Styles */
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .card {
            margin-bottom: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            padding: 15px 20px;
            border-bottom: 1px solid #eee;
        }

        .card-body {
            padding: 20px;
        }

        .bg-primary {
            background-color: #1a237e !important;
        }

        .bg-success {
            background-color: #28a745 !important;
        }

        .text-white {
            color: white !important;
        }

        .btn {
            padding: 8px 16px;
            border-radius: 4px;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }

        .btn-secondary {
            background-color: #6c757d;
            color: white;
        }

        .btn-warning {
            background-color: #ffc107;
            color: #212529;
        }

        .badge {
            padding: 5px 10px;
            border-radius: 12px;
            font-size: 0.8rem;
        }

        .bg-warning {
            background-color: #ffc107;
        }

        .bg-success {
            background-color: #28a745;
        }

        /* Nouveaux styles pour le feedback PRO */
        .feedback-card {
            border: 1px solid #e0e0e0;
            border-radius: 10px;
            overflow: hidden;
        }

        .rating-container {
            display: flex;
            justify-content: center;
            margin: 1.5rem 0;
            direction: rtl;
        }

        .rating-input {
            display: none;
        }

        .rating-label {
            cursor: pointer;
            padding: 0 5px;
            font-size: 2rem;
            color: #e4e5e9;
            transition: all 0.2s ease;
        }

        .rating-label:hover,
        .rating-label:hover ~ .rating-label,
        .rating-input:checked ~ .rating-label {
            color: #ffc107;
        }

        .feedback-textarea {
            width: 100%;
            min-height: 120px;
            padding: 15px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            resize: none;
            font-size: 1rem;
            transition: all 0.3s;
        }

        .feedback-textarea:focus {
            border-color: #1a237e;
            outline: none;
            box-shadow: 0 0 0 3px rgba(26, 35, 126, 0.1);
        }

        .submit-feedback {
            background: linear-gradient(135deg, #1a237e 0%, #283593 100%);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: block;
            width: 100%;
            margin-top: 1rem;
        }

        .submit-feedback:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(26, 35, 126, 0.2);
        }

        .submit-feedback:active {
            transform: translateY(0);
        }

        #feedback-alert {
            transition: all 0.3s ease;
        }
    </style>
{% endblock %}

{% block title %}Réponse à la réclamation #{{ reclamation.id }}{% endblock %}

{% block body %}
    <nav class="navbar">
        <div class="navbar-brand">
            <img src="{{ asset('images/Logo.png') }}" alt="Logo">
        </div>
        <div class="navbar-menu">
            <a href="{{ path('app_reclamation_index') }}" class="nav-button">
                <i class="fas fa-list"></i> Réclamations
            </a>
            <a href="{{ path('app_reponse_index') }}" class="nav-button">
                <i class="fas fa-comment"></i> Réponses
            </a>
        </div>
    </nav>

    <div class="container">
        <h2>Réponse à la réclamation #{{ reclamation.id }}</h2>

        <div class="card">
            <div class="card-header bg-primary text-white">
                Détails de la réclamation
            </div>
            <div class="card-body">
                <h5 class="card-title">{{ reclamation.titre }}</h5>
                <p class="card-text">{{ reclamation.description }}</p>
                <p class="card-text">
                    <small class="text-muted">
                        Créée le {{ reclamation.dateR|date('d/m/Y') }} | 
                        Statut: <span class="badge bg-{{ reclamation.status == 'resolved' ? 'success' : 'warning' }}">
                            {{ reclamation.status }}
                        </span>
                    </small>
                </p>
            </div>
        </div>

        <div class="card">
            <div class="card-header bg-success text-white">
                Réponse de l'administration
            </div>
            <div class="card-body">
                <div class="mb-3">
                    {{ reponse.descriptionRep }}
                </div>
                <p class="card-text">
                    <small class="text-muted">
                        Répondu le {{ reponse.dateRep|date('d/m/Y H:i') }}
                    </small>
                </p>
            </div>
        </div>

        {# Nouvelle section Feedback PRO #}
          <div class="card mt-4 feedback-card">
            <div class="card-header bg-info text-white">
                <i class="fas fa-comment-alt"></i> Votre avis compte
            </div>
            <div class="card-body text-center">
                
                {# Message d'alerte #}
                <div id="feedback-alert" class="alert d-none mb-4"></div>
                
                {# Titre #}
                <h5 class="mb-4">Comment évaluez-vous cette réponse ?</h5>
                
                {# Conteneur des étoiles - Version visuelle pure #}
                <div class="rating-container mb-4">
                    {% for i in 5..1 %}
                        <input type="radio" id="star{{ i }}" name="rating" value="{{ i }}" class="rating-input">
                        <label for="star{{ i }}" class="rating-label" title="{{ i }} étoile{{ i > 1 ? 's' : '' }}">
                            <i class="fas fa-star"></i>
                        </label>
                    {% endfor %}
                </div>
                
                {# Zone de commentaire #}
                <textarea class="feedback-textarea mb-4" 
                        placeholder="Votre commentaire..."></textarea>
                
                {# Bouton d'envoi #}
                <button id="submit-feedback" class="submit-feedback">
                    <i class="fas fa-paper-plane me-2"></i>Envoyer
                </button>
            </div>
        </div>


        <div class="mt-3">
            <a href="{{ path('app_reclamation_index') }}" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Retour à la liste
            </a>
            
            {% if is_granted('ROLE_ADMIN') %}
                <a href="{{ path('admin_reponse_edit', {'id': reponse.id}) }}" class="btn btn-warning">
                    <i class="fas fa-edit"></i> Modifier la réponse
                </a>
            {% endif %}
        </div>
    </div>

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const stars = document.querySelectorAll('.rating-input');
            const textarea = document.querySelector('.feedback-textarea');
            const submitBtn = document.getElementById('submit-feedback');
            const alertBox = document.getElementById('feedback-alert');
            let selectedRating = 0;

            stars.forEach(star => {
                star.addEventListener('change', function() {
                    selectedRating = parseInt(this.value);
                });
            });

            submitBtn.addEventListener('click', async function() {
                if (selectedRating === 0) {
                    showAlert('Veuillez sélectionner une note', 'danger');
                    return;
                }

                const feedback = {
                    rating: selectedRating,
                    comment: textarea.value
                };

                try {
                    const response = await fetch(`/api/feedback/{{ reponse.id }}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify(feedback)
                    });

                    if (response.ok) {
                        showAlert('Merci pour votre précieux feedback !', 'success');
                        resetForm();
                    } else {
                        const error = await response.json();
                        showAlert(error.error || 'Erreur lors de l\'envoi', 'danger');
                    }
                } catch (error) {
                    showAlert('Erreur de connexion au serveur', 'danger');
                }
            });

            function showAlert(message, type) {
                alertBox.textContent = message;
                alertBox.className = `alert alert-${type} d-block`;
                setTimeout(() => {
                    alertBox.classList.add('d-none');
                }, 3000);
            }

            function resetForm() {
                stars.forEach(star => star.checked = false);
                textarea.value = '';
                selectedRating = 0;
            }
        });
    </script>
{% endblock %}
{% endblock %}
