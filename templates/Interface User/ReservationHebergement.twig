{% extends 'base.html.twig' %}

{% block title %}New Accommodation Reservation{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    :root {
        --primary: #03045f;
        --primary-light: #3a86ff;
        --secondary: #3f37c9;
        --accent: #f72585;
        --light: #f8f9fa;
        --gray: #e9ecef;
        --dark: #212529;
        --white: #ffffff;
        --success: #4cc9f0;
        --warning: #f59e0b;
    }

    body {
        background-color: #f5f7ff;
        color: var(--dark);
       
    }

    .page-container {
        
        max-width: none;
        padding: 0;
    }

    .page-title {
        font-size: 2rem;
        font-weight: 700;
        color: var(--dark);
        margin-bottom: 1.5rem;
        position: relative;
        background: linear-gradient(90deg, var(--primary), var(--secondary));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;

        padding: 0 2rem;
    }

    .reservation-container {
        background-color: var(--white);
        border-radius: 20px;
        box-shadow: none;
        margin-bottom: 0;
        width: 96%;
    }

    .reservation-header {
        background: linear-gradient(135deg, var(--primary), var(--secondary));
        color: var(--white);
        padding: 1.5rem 2rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        display: flex;
        justify-content: space-between;
                border-radius: 20px;

        align-items: center;
        width: 100%;
    }

    .flight-card {
        background-color: var(--white);
        padding: 2rem;
        width: 100%;
        border-bottom: 1px solid var(--gray);
    }

    .airline-info {
        display: flex;
        gap: 1.5rem;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .airline-info img {
        width: 56px;
        height: 56px;
        border-radius: 12px;
        object-fit: cover;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .airline-details {
        flex: 1;
    }

    .flight-route {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin: 2rem 0;
        position: relative;
        padding: 0 1rem;
    }

    .flight-route::before {
        content: '';
        position: absolute;
        left: 0;
        right: 0;
        top: 50%;
        height: 2px;
        background: linear-gradient(90deg, transparent, var(--gray), transparent);
        z-index: 1;
    }

    .location {
        text-align: center;
        width: 160px;
        position: relative;
        z-index: 2;
        padding: 0 1rem;
    }

    .location .city {
        font-weight: 600;
        font-size: 1.1rem;
        color: var(--dark);
        margin-bottom: 0.5rem;
    }

    .location .date {
        font-size: 0.9rem;
        color: #6c757d;
        margin-bottom: 0.25rem;
    }

    .location .time {
        font-size: 0.9rem;
        color: var(--primary);
        font-weight: 600;
    }

    .duration {
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        background-color: var(--white);
        padding: 0.5rem 1.25rem;
        border-radius: 50px;
        font-size: 0.9rem;
        font-weight: 600;
        color: var(--primary);
        border: 1px solid var(--gray);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        z-index: 3;
    }

    .price-display {
        font-size: 1.75rem;
        font-weight: 700;
        color: var(--primary);
        text-align: right;
        margin-top: 1.5rem;
    }

    /* Modern Form Styling */
    .form-section {
        padding: 57px 37px 0 ;

        width: 99%;
        background-color: var(--white);
    }

    .form-section h3 {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--dark);
        margin-bottom: 2rem;
        position: relative;
        padding-bottom: 0.75rem;
    }

    .form-section h3::after {
        content: '';
        position: absolute;
        left: 0;
        bottom: 0;
        width: 60px;
        height: 4px;
        background: linear-gradient(90deg, var(--primary), var(--secondary));
        border-radius: 4px;
    }

    .form-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 2rem;
        margin-bottom: 2rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        font-weight: 500;
        color: var(--dark);
        margin-bottom: 0.75rem;
        display: block;
        font-size: 0.95rem;
    }

    .form-control {
        border-radius: 10px;
        padding: 1rem;
        border: 1px solid #e0e0e0;
        transition: all 0.2s ease;
        background-color: var(--white);
        width: 90%;
        font-size: 1rem;
    }
    .form-select{
        width: 94%;
        border-radius: 10px;
        padding: 1rem;
        border: 1px solid #e0e0e0;
        transition: all 0.2s ease;
        background-color: var(--white);
        
        font-size: 1rem;
    }

    .form-control:focus, .form-select:focus {
        border-color: var(--primary-light);
        box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
        outline: none;
    }

    .form-control[readonly] {
        background-color: var(--light);
        cursor: not-allowed;
    }

    /* Status Badge */
    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-size: 0.85rem;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .status-waiting {
        background-color: rgba(11, 245, 66, 0.23);
        color:rgba(13, 231, 111, 0.73);
    }

    /* Button Styles */
    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 1.5rem;
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 1px solid var(--gray);
    }

    .btn {
        border-radius: 10px;
        padding: 1rem 2rem;
        font-weight: 500;
        transition: all 0.2s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.75rem;
        font-size: 1rem;
        border: none;
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--primary), var(--secondary));
        color: white;
        box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(67, 97, 238, 0.3);
    }

    .btn-secondary {
        background-color: var(--white);
        border: 1px solid var(--gray);
        color: var(--dark);
    }

    .btn-secondary:hover {
        background-color: var(--light);
        border-color: #d0d0d0;
    }

    /* Responsive Adjustments */
    @media (max-width: 992px) {
        .form-grid {
            grid-template-columns: 1fr;
        }
        
        .flight-route {
            flex-direction: column;
            gap: 2rem;
            margin: 2rem 0;
        }
        
        .flight-route::before {
            display: none;
        }
        
        .location {
            width: 100%;
            text-align: center;
            padding: 1rem;
            background-color: var(--light);
            border-radius: 10px;
        }
        
        .duration {
            position: relative;
            left: auto;
            transform: none;
            margin: 1rem 0;
        }
    }
</style>
{% endblock %}

{% block body %}
    {{ include('/Sidebar/Navbar.twig') }}

    <div class="page-container">
        <h1 class="page-title">Book Accommodation for Your Trip</h1>
        
        <div class="reservation-container">
            <div class="reservation-header">
                <span>Flight Details</span>
                <span class="status-badge status-waiting">
                    <i class="bi bi-clock"></i> RESERVED
                </span>
            </div>
            
            <div class="flight-card">
                <div class="airline-info">
                    <img src="{{ asset('images/avionicon.jpeg') }}" alt="Airline Logo">
                    <div class="airline-details">
                        <h3 class="fw-bold mb-1">{{ reservation_voyage.id_vol.airLine }}</h3>
                        <div class="text-muted mb-2">Flight {{ reservation_voyage.id_vol.flightNumber }} â€¢ {{ reservation_voyage.place }} seat(s)</div>
                    </div>
                </div>
                
                <div class="flight-route">
                    <div class="location">
                        <div class="city">DEPARTURE</div>
                        <div class="date">{{ reservation_voyage.id_vol.dateDepart|date("M j, Y") }}</div>
                    </div>
                    
                    <div class="duration">{{ reservation_voyage.id_vol.dureeVol }}</div>
                    
                    <div class="location">
                        <div class="city">ARRIVAL</div>
                        <div class="date">{{ reservation_voyage.id_vol.dateArrival|date("M j, Y") }}</div>
                    </div>
                </div>
                
                <div class="price-display">{{ reservation_voyage.prixTotal }} DT</div>
            </div>
            
            <div class="form-section">
                <h3>Accommodation Details</h3>
                {{ form_start(form) }}
                
                <div class="form-grid">
                    <div class="form-group">
                        {{ form_label(form.hebergement, 'Accommodation', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.hebergement, {'attr': {'class': 'form-select'}}) }}
                    </div>
                    
                    <div class="form-group">
                        {{ form_label(form.date, 'Check-in Date', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.date, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    
                    <div class="form-group">
                        {{ form_label(form.dateFin, 'Check-out Date', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.dateFin, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    
                    <div class="form-group">
                        {{ form_label(form.prix, 'Total Price', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.prix, {'attr': {'class': 'form-control'}}) }}
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Duration</label>
                        <input type="text" class="form-control" id="duration-display" readonly value="Calculating...">
                    </div>
                </div>
                
                <div class="form-actions">
                    <a href="{{ path('flight_history') }}" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to Flights
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-check-lg"></i> Confirm Booking
                    </button>
                </div>
                
                {{ form_end(form) }}
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const hebergementSelect = document.getElementById('{{ form.hebergement.vars.id }}');
            const dateStart = document.getElementById('{{ form.date.vars.id }}');
            const dateEnd = document.getElementById('{{ form.dateFin.vars.id }}');
            const priceDisplay = document.getElementById('{{ form.prix.vars.id }}');
            const durationDisplay = document.getElementById('duration-display');
            
            function calculatePriceAndDuration() {
                if (hebergementSelect.value && dateStart.value && dateEnd.value) {
                    const startDate = new Date(dateStart.value);
                    const endDate = new Date(dateEnd.value);
                    
                    // Calculate duration
                    const diffTime = Math.abs(endDate - startDate);
                    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                    const nights = diffDays;
                    
                    // Update duration display
                    durationDisplay.value = nights === 1 ? `${nights} night` : `${nights} nights`;
                    
                    // Calculate price
                    const selectedOption = hebergementSelect.options[hebergementSelect.selectedIndex];
                    const pricePerNight = parseFloat(selectedOption.getAttribute('data-price'));
                    
                    if (pricePerNight && nights > 0) {
                        const totalPrice = (pricePerNight * nights).toFixed(2);
                        priceDisplay.value = totalPrice;
                    } else {
                        priceDisplay.value = '0.00';
                    }
                }
            }
            
            hebergementSelect.addEventListener('change', calculatePriceAndDuration);
            dateStart.addEventListener('change', calculatePriceAndDuration);
            dateEnd.addEventListener('change', calculatePriceAndDuration);
            
            // Initial calculation
            calculatePriceAndDuration();
        });
    </script>
{% endblock %}