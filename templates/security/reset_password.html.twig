{% extends 'base.html.twig' %}

{% block title %}Reset Password{% endblock %}

{% block body %}
<div class="login-container">
    <div class="form-section">
        <h1 class="h3 mb-4 text-center">Set New Password</h1>
        
        <form method="post" class="needs-validation" novalidate>
            <div class="form-group">
                <label class="form-label" for="password">New Password</label>
                <input 
                    type="password" 
                    id="password" 
                    name="password" 
                    class="form-input"
                    required
                    minlength="6"
                >
                <div class="invalid-feedback">
                    Please enter at least 6 characters
                </div>
            </div>

            <div class="form-group">
                <label class="form-label" for="confirm_password">Confirm Password</label>
                <input 
                    type="password" 
                    id="confirm_password" 
                    name="confirm_password" 
                    class="form-input"
                    required
                    minlength="6"
                >
                <div class="invalid-feedback">
                    Passwords must match
                </div>
            </div>

            <div class="text-center">
                <button type="submit" class="btn-primary">Update Password</button>
            </div>
            
            <div class="mt-3 text-center">
                <a href="{{ path('app_login') }}" class="btn-secondary">
                    Back to Login
                </a>
            </div>
        </form>
    </div>
</div>

<style>
.login-container {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    background-color: #f8f9fa;
}

.form-section {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    width: 100%;
    max-width: 400px;
}

.form-group {
    margin-bottom: 1.5rem;
}

.form-input {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ced4da;
    border-radius: 4px;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.form-input:focus {
    border-color: #80bdff;
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
}

.btn-primary {
    width: 100%;
    max-width: 200px;
    padding: 0.75rem;
    background-color: #0d6efd;
    border: none;
    border-radius: 4px;
    color: white;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}

.btn-primary:hover {
    background-color: #0b5ed7;
}

.btn-secondary {
    display: inline-block;
    margin-top: 1rem;
    color: #6c757d;
    text-decoration: none;
    transition: color 0.2s ease-in-out;
}

.btn-secondary:hover {
    color: #565e64;
    text-decoration: underline;
}

.invalid-feedback {
    color: #dc3545;
    font-size: 0.875rem;
    margin-top: 0.25rem;
}

.is-invalid {
    border-color: #dc3545 !important;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const password = document.getElementById('password');
    const confirmPassword = document.getElementById('confirm_password');
    
    form.addEventListener('submit', function(e) {
        let isValid = true;
        
        // Check password match
        if(password.value !== confirmPassword.value) {
            confirmPassword.classList.add('is-invalid');
            isValid = false;
        } else {
            confirmPassword.classList.remove('is-invalid');
        }
        
        // Check form validity
        if (!form.checkValidity() || !isValid) {
            e.preventDefault();
            e.stopPropagation();
        }
        
        form.classList.add('was-validated');
    });
});
</script>
{% endblock %}